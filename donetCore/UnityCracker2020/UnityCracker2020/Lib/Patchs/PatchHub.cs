using System;
using System.Collections.Generic;
using System.IO;
using System.Text;
using static Unity3dPacth.Lib.PatchToolsUtility;

namespace Unity3dPacth.Lib
{
	public class PatchHub
    {
		public static FilePatchCode[] FilePatchCodes = new FilePatchCode[]
		{
			new FilePatchCode
			{
				 patchCodes=new PatchCode[]
				 {
					 new PatchCode
					{
						SignatureCode= new byte[]{ 0x6C,0x69,0x63,0x65,0x6E,0x73,0x65,0x49,0x6E,0x66,0x6F,0x2E,0x61,0x63,
							0x74,0x69,0x76,0x61,0x74,0x65,0x64,0x20,0x3D,0x20,0x6C,0x69,0x63,0x65,0x6E,0x73,0x65,0x43 },
						Patch=new byte[]{ 0x6C,0x69,0x63,0x65,0x6E,0x73,0x65,0x49,0x6E,0x66,0x6F,0x2E,0x61,0x63,0x74,0x69,
							0x76,0x61,0x74,0x65,0x64,0x20,0x3D,0x20,0x20,0x74,0x72,0x75,0x65,0x3B,0x2F,0x2F },
						EnableAllPatchPosition=true
					},

					new PatchCode
					{
                        SignatureCode= new byte[]{ 0x76,0x65,0x72,0x69,0x66,0x79,0x4C,0x69,0x63,0x65,0x6E,0x73,0x65,0x44,
							0x61,0x74,0x61,0x28,0x78,0x6D,0x6C,0x2C,0x20,0x6E,0x65,0x77,0x66,0x69,0x6C,0x65,0x20,0x3D,0x20,
							0x66,0x61,0x6C,0x73,0x65,0x29,0x20,0x7B,0x0D,0x0A,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
							0x6E,0x20,0x6E,0x65,0x77,0x20,0x50,0x72,0x6F,0x6D,0x69,0x73,0x65,0x28,0x28,0x72,0x65,0x73,0x6F,
							0x6C,0x76,0x65,0x2C,0x20,0x72,0x65,0x6A,0x65,0x63,0x74,0x29,0x20,0x3D,0x3E,0x20,0x7B,0x0D,0x0A,
							0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x78,0x6D,0x6C,0x20,0x3D,0x3D,0x3D,0x20,0x27,
							0x27,0x29,0x20,0x7B,0x0D,0x0A,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x74,0x68,0x69,0x73,0x2E,
							0x6C,0x69,0x63,0x65,0x6E,0x73,0x65,0x53,0x74,0x61,0x74,0x75,0x73,0x20,0x3D,0x20,0x4C,0x49,0x43,
							0x45,0x4E,0x53,0x45,0x5F,0x53,0x54,0x41,0x54,0x55,0x53,0x2E,0x6B,0x4C,0x69,0x63,0x65,0x6E,0x73,
							0x65,0x45,0x72,0x72,0x6F,0x72,0x46,0x6C,0x61,0x67,0x5F,0x4E,0x6F,0x4C,0x69,0x63,0x65,0x6E,0x73,
							0x65,0x3B,0x0D,0x0A,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x6A,0x65,0x63,0x74,0x28,
                            0x29,0x3B,0x0D,0x0A,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6E,0x3B,
							0x0D,0x0A,0x20,0x20,0x20,0x20,0x20,0x20,0x7D },
                        Patch=new byte[]{ 0x76,0x65,0x72,0x69,0x66,0x79,0x4C,0x69,0x63,0x65,0x6E,0x73,0x65,0x44,0x61,0x74,
							0x61,0x28,0x78,0x6D,0x6C,0x2C,0x20,0x6E,0x65,0x77,0x66,0x69,0x6C,0x65,0x20,0x3D,0x20,0x66,0x61,
							0x6C,0x73,0x65,0x29,0x20,0x7B,0x0D,0x0A,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6E,0x20,
							0x6E,0x65,0x77,0x20,0x50,0x72,0x6F,0x6D,0x69,0x73,0x65,0x28,0x28,0x72,0x65,0x73,0x6F,0x6C,0x76,
							0x65,0x2C,0x20,0x72,0x65,0x6A,0x65,0x63,0x74,0x29,0x20,0x3D,0x3E,0x20,0x7B,0x0D,0x0A,0x20,0x20,
							0x20,0x20,0x20,0x20,0x72,0x65,0x73,0x6F,0x6C,0x76,0x65,0x28,0x74,0x72,0x75,0x65,0x29,0x3B,0x2F,
							0x2A,0x7B,0x0D,0x0A,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x74,0x68,0x69,0x73,0x2E,0x6C,0x69,
							0x63,0x65,0x6E,0x73,0x65,0x53,0x74,0x61,0x74,0x75,0x73,0x20,0x3D,0x20,0x4C,0x49,0x43,0x45,0x4E,
							0x53,0x45,0x5F,0x53,0x54,0x41,0x54,0x55,0x53,0x2E,0x6B,0x4C,0x69,0x63,0x65,0x6E,0x73,0x65,0x45,
							0x72,0x72,0x6F,0x72,0x46,0x6C,0x61,0x67,0x5F,0x4E,0x6F,0x4C,0x69,0x63,0x65,0x6E,0x73,0x65,0x3B,
							0x0D,0x0A,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x6A,0x65,0x63,0x74,0x28,0x29,0x3B,
							0x0D,0x0A,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6E,0x3B,0x0D,0x0A,
							0x20,0x20,0x20,0x20,0x20,0x2A,0x2F }
					},
					new PatchCode
					{
						SignatureCode= new byte[]{ 0x76,0x65,0x72,0x69,0x66,0x79,0x4C,0x69,0x63,0x65,0x6E,0x73,0x65,0x44,
							0x61,0x74,0x61,0x28,0x78,0x6D,0x6C,0x2C,0x20,0x6E,0x65,0x77,0x66,0x69,0x6C,0x65,0x20,0x3D,0x20,
							0x66,0x61,0x6C,0x73,0x65,0x29,0x20,0x7B,0x0D,0x0A,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,
							0x65,0x74,0x75,0x72,0x6E,0x20,0x6E,0x65,0x77,0x20,0x50,0x72,0x6F,0x6D,0x69,0x73,0x65,0x28,0x28,
							0x72,0x65,0x73,0x6F,0x6C,0x76,0x65,0x2C,0x20,0x72,0x65,0x6A,0x65,0x63,0x74,0x29,0x20,0x3D,0x3E,
							0x20,0x7B,0x0D,0x0A,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,
							0x28,0x78,0x6D,0x6C,0x20,0x3D,0x3D,0x3D,0x20,0x27,0x27,0x29,0x20,0x7B,0x0D,0x0A,0x20,0x20,0x20,
							0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x74,0x68,0x69,0x73,0x2E,0x6C,
							0x69,0x63,0x65,0x6E,0x73,0x65,0x53,0x74,0x61,0x74,0x75,0x73,0x20,0x3D,0x20,0x4C,0x49,0x43,0x45,
							0x4E,0x53,0x45,0x5F,0x53,0x54,0x41,0x54,0x55,0x53,0x2E,0x6B,0x4C,0x69,0x63,0x65,0x6E,0x73,0x65,
							0x45,0x72,0x72,0x6F,0x72,0x46,0x6C,0x61,0x67,0x5F,0x4E,0x6F,0x4C,0x69,0x63,0x65,0x6E,0x73,0x65,
							0x3B,0x0D,0x0A,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
							0x72,0x65,0x6A,0x65,0x63,0x74,0x28,0x29,0x3B,0x0D,0x0A,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
							0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6E,0x3B,0x0D,0x0A,0x20,0x20,
							0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7D },
						Patch=new byte[]{ 0x76,0x65,0x72,0x69,0x66,0x79,0x4C,0x69,0x63,0x65,0x6E,0x73,0x65,0x44,0x61,0x74,
							0x61,0x28,0x78,0x6D,0x6C,0x2C,0x20,0x6E,0x65,0x77,0x66,0x69,0x6C,0x65,0x20,0x3D,0x20,0x66,0x61,
							0x6C,0x73,0x65,0x29,0x20,0x7B,0x0D,0x0A,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,
							0x75,0x72,0x6E,0x20,0x6E,0x65,0x77,0x20,0x50,0x72,0x6F,0x6D,0x69,0x73,0x65,0x28,0x28,0x72,0x65,
							0x73,0x6F,0x6C,0x76,0x65,0x2C,0x20,0x72,0x65,0x6A,0x65,0x63,0x74,0x29,0x20,0x3D,0x3E,0x20,0x7B,
							0x0D,0x0A,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x73,0x6F,0x6C,
							0x76,0x65,0x28,0x74,0x72,0x75,0x65,0x29,0x3B,0x2F,0x2A,0x7B,0x0D,0x0A,0x20,0x20,0x20,0x20,0x20,
							0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x74,0x68,0x69,0x73,0x2E,0x6C,0x69,0x63,
							0x65,0x6E,0x73,0x65,0x53,0x74,0x61,0x74,0x75,0x73,0x20,0x3D,0x20,0x4C,0x49,0x43,0x45,0x4E,0x53,
							0x45,0x5F,0x53,0x54,0x41,0x54,0x55,0x53,0x2E,0x6B,0x4C,0x69,0x63,0x65,0x6E,0x73,0x65,0x45,0x72,
							0x72,0x6F,0x72,0x46,0x6C,0x61,0x67,0x5F,0x4E,0x6F,0x4C,0x69,0x63,0x65,0x6E,0x73,0x65,0x3B,0x0D,
							0x0A,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,
							0x6A,0x65,0x63,0x74,0x28,0x29,0x3B,0x0D,0x0A,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
							0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6E,0x3B,0x0D,0x0A,0x20,0x20,0x20,0x20,
							0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x2A,0x2F }
					}
				 }
			}
		};

	

        
    }

	/* 原始代码
    public class PatchHub
    {
        private static readonly byte[] Rep1 = new byte[126]{103,101,116,76,105,99,101,110,115,101,73,110,102,111,40,99,97,108,108,98,97,99,
			107,41,32,123,13,10,32,32,32,32,47,47,32,108,111,97,100,32,108,105,99,101,110,115,101,13,10,32,32,32,32,47,47,32,103,101,116,
			32,108,97,116,101,115,116,32,100,97,116,97,32,102,114,111,109,32,108,105,99,101,110,115,101,67,111,114,101,13,10,32,32,32,32,
			108,105,99,101,110,115,101,73,110,102,111,46,97,99,116,105,118,97,116,101,100,32,61,32,32,116,114,117,101,59,47,47};
		private static readonly byte[] Rep2 = new byte[232]{118,101,114,105,102,121,76,105,99,101,110,115,101,68,97,116,97,40,120,109,108,
			44,32,110,101,119,102,105,108,101,32,61,32,102,97,108,115,101,41,32,123,13,10,32,32,32,32,114,101,116,117,114,110,32,110,101,
			119,32,80,114,111,109,105,115,101,40,40,114,101,115,111,108,118,101,44,32,114,101,106,101,99,116,41,32,61,62,32,123,13,10,32,32,
			32,114,101,115,111,108,118,101,40,116,114,117,101,41,59,47,42,39,41,32,123,13,10,32,32,32,32,32,32,32,32,116,104,105,115,46,108,
			105,99,101,110,115,101,83,116,97,116,117,115,32,61,32,76,73,67,69,78,83,69,95,83,84,65,84,85,83,46,107,76,105,99,101,110,115,101,
			69,114,114,111,114,70,108,97,103,95,78,111,76,105,99,101,110,115,101,59,13,10,32,32,32,32,32,32,32,32,114,101,106,101,99,116,40,
			41,59,13,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,59,13,10,32,32,32,32,32,42,47};
		private static readonly byte[] Fin1 = new byte[126]{103,101,116,76,105,99,101,110,115,101,73,110,102,111,40,99,97,108,108,98,97,99,107,
			41,32,123,13,10,32,32,32,32,47,47,32,108,111,97,100,32,108,105,99,101,110,115,101,13,10,32,32,32,32,47,47,32,103,101,116,32,108,97,
			116,101,115,116,32,100,97,116,97,32,102,114,111,109,32,108,105,99,101,110,115,101,67,111,114,101,13,10,32,32,32,32,108,105,99,101,
			110,115,101,73,110,102,111,46,97,99,116,105,118,97,116,101,100,32,61,32,108,105,99,101,110,115,101,67};
		private static readonly byte[] Fin2 = new byte[232] {118,101,114,105,102,121,76,105,99,101,110,115,101,68,97,116,97,40,120,109,108,44,
			32,110,101,119,102,105,108,101,32,61,32,102,97,108,115,101,41,32,123,13,10,32,32,32,32,114,101,116,117,114,110,32,110,101,119,32,
			80,114,111,109,105,115,101,40,40,114,101,115,111,108,118,101,44,32,114,101,106,101,99,116,41,32,61,62,32,123,13,10,32,32,32,32,32,
			32,105,102,32,40,120,109,108,32,61,61,61,32,39,39,41,32,123,13,10,32,32,32,32,32,32,32,32,116,104,105,115,46,108,105,99,101,110,115,
			101,83,116,97,116,117,115,32,61,32,76,73,67,69,78,83,69,95,83,84,65,84,85,83,46,107,76,105,99,101,110,115,101,69,114,114,111,114,70,
			108,97,103,95,78,111,76,105,99,101,110,115,101,59,13,10,32,32,32,32,32,32,32,32,114,101,106,101,99,116,40,41,59,13,10,32,32,32,32,32,
			32,32,32,114,101,116,117,114,110,59,13,10,32,32,32,32,32,32,125};
		private static readonly byte[] Fin2019 = new byte[20] { 76, 141, 68, 36, 32, 72, 141, 85, 224, 72, 139, 206, 232, 195, 46, 0, 0, 132, 192, 65 };
		private static int FindBytes(string fileTarget, byte[] sequence)
		{
			byte[] array = File.ReadAllBytes(fileTarget);
			int i = 0;
			int num = array.Length - sequence.Length;
			byte b = sequence[0];
			for (; i < num; i++)
			{
				if (array[i] != b)
				{
					continue;
				}
				for (int j = 1; j < sequence.Length && array[i + j] == sequence[j]; j++)
				{
					if (j == sequence.Length - 1)
					{
						return i;
					}
				}
			}
			return -1;
		}
		private static void PatchASAR1(string originalFile)
		{
			byte[] array = File.ReadAllBytes(originalFile);
			for (int i = 0; i < array.Length; i++)
			{
				if (DetectPatch1(array, i))
				{
					for (int j = 0; j < Fin1.Length; j++)
					{
						array[i + j] = Rep1[j];
					}
				}
			}
			File.WriteAllBytes(originalFile, array);
		}
		private static void PatchASAR2(string originalFile)
		{
			byte[] array = File.ReadAllBytes(originalFile);
			for (int i = 0; i < array.Length; i++)
			{
				if (DetectPatch2(array, i))
				{
					for (int j = 0; j < Fin2.Length; j++)
					{
						array[i + j] = Rep2[j];
					}
				}
			}
			File.WriteAllBytes(originalFile, array);
		}
		private static bool DetectPatch1(byte[] sequence, int position)
		{
			if (position + Fin1.Length > sequence.Length)
			{
				return false;
			}
			for (int i = 0; i < Fin1.Length; i++)
			{
				if (Fin1[i] != sequence[position + i])
				{
					return false;
				}
			}
			return true;
		}
		private static bool DetectPatch2(byte[] sequence, int position)
		{
			if (position + Fin2.Length > sequence.Length)
			{
				return false;
			}
			for (int i = 0; i < Fin2.Length; i++)
			{
				if (Fin2[i] != sequence[position + i])
				{
					return false;
				}
			}
			return true;
		}
		private static bool DetectPatch2019(byte[] sequence, int position)
		{
			if (position + Fin2019.Length > sequence.Length)
			{
				return false;
			}
			for (int i = 0; i < Fin2019.Length; i++)
			{
				if (Fin2019[i] != sequence[position + i])
				{
					return false;
				}
			}
			return true;
		}

		private static void Button6_Click(string HubPath)
		{
			if (FindBytes("HubPath", Rep1) != -1)
			{
				MessageBox.Show("以Patch", "消息", MessageBoxButtons.OK, MessageBoxIcon.Information);
			}
			else
			{
				PatchASAR1("HubPath");
				PatchASAR2("HubPath");
				MessageBox.Show("Patch OK", "消息", MessageBoxButtons.OK, MessageBoxIcon.Information);
			}
		}
	
	}
	*/

}
